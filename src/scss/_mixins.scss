@import'variables';

@mixin gradient-background-line {
    background: -moz-linear-gradient(40deg, $brand-primary 25%, $brand-secondary 50%, $brand-tertiary 75%);
    background: -webkit-linear-gradient(40deg, $brand-primary 25%, $brand-secondary 50%, $brand-tertiary 75%);
    background: linear-gradient(40deg, $brand-primary 25%, $brand-secondary 50%, $brand-tertiary 75%);
  }

@mixin gradient-background-circle {
    background: $brand-primary;
    background: -moz-radial-gradient(circle, $brand-primary 25%, $brand-secondary 50%, $brand-tertiary 75%);
    background: -webkit-radial-gradient(circle, $brand-primary 25%, $brand-secondary 50%, $brand-tertiary 75%);
    background: radial-gradient(circle, $brand-primary 25%, $brand-secondary 50%, $brand-tertiary 75%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#{$brand-primary}", endColorstr="#{$brand-tertiary}", GradientType=1);
}

  
  /*background-image: linear-gradient(
  45deg,
  hsl(308deg 33% 66%) 1%,
  hsl(277deg 37% 72%) 46%,
  hsl(249deg 46% 77%) 51%,
  hsl(227deg 61% 79%) 51%,
  hsl(226deg 76% 82%) 49%,
  hsl(247deg 95% 87%) 49%,
  hsl(274deg 100% 87%) 54%,
  hsl(302deg 100% 86%) 99%

  outro

  background: linear-gradient(90deg, rgb(197,139,229,0.896796218487395) 0%, 
    rgb(168,192,238,1) 50%, 
    rgb(255,183,253,0.8995973389355743) 100%);
  */

  //butons
  @mixin button-tecla($background, $hover-background, $icon-color, $hover-icon-color, $size) {
    .btn {
      appearance: none;
      display: grid;
      place-items: center;
      background: $background;
      padding: $size / 10;
      border-radius: $size / 8;
      box-shadow: 6px 6px 10px -1px rgba(0, 0, 0, 0.15),
        -6px -6px 10px -1px rgba(255, 255, 255, 0.7);
      border: 1px solid rgba(0, 0, 0, 0);
      cursor: pointer;
      transition: transform 0.9s, background-color 0.9s;
      font-size: $size / 4;
      color: $icon-color;
  
      // Aplicar estilos de transição para elementos filhos de .btn
      & > * {
        transition: transform 0.5s, color 0.5s;
      }
    }
  
    .btn:active {
      box-shadow: inset 4px 4px 6px -1px rgba(0, 0, 0, 0.2),
        inset -4px -4px 6px -1px rgba(255, 255, 255, 0.7),
        -0.5px -0.5px 0px rgba(255, 255, 255, 1),
        0.5px 0.5px 0px rgba(0, 0, 0, 0.15),
        0px 12px 10px -10px rgba(0, 0, 0, 0.05);
      border: 1px solid rgba(0, 0, 0, 0.1);
      transform: translateY(0.5em);
      background-color: $hover-background;
      color: $hover-icon-color;
  
      // Aplicar estilos de transição para elementos filhos de .btn quando estiver ativo
      & > * {
        transform: scale(0.9);
      }
    }
}
  
  

@mixin button-basic($background, $border-color, $text-color, $size, $text-hover, $background-hover) {
  // Calcula o padding proporcional ao $size
  $padding-vertical: $size / 2;
  $padding-horizontal: $size * 2;

  background-color: $background;
  border: 0.125rem solid $border-color;
  border-radius: 0.9375em;
  box-sizing: border-box;
  color: $text-color;
  cursor: pointer;
  display: inline-block;
  font-size: 1.6em;
  font-weight: 600;
  line-height: normal;
  margin: 0;
  min-width: 0;
  outline: none;

  // Aplica o padding proporcional
  padding: $padding-vertical $padding-horizontal;

  text-align: center;
  text-decoration: none;
  transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  will-change: transform;

  &:hover {
    color: $text-hover;
    background-color: $background-hover;
    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
    transform: translateY(-2px);
  }

  &:disabled {
    pointer-events: none;
  }

  &:active {
    box-shadow: none;
    transform: translateY(0);
    color: $text-hover;
    background-color: $background-hover;
    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
    transform: translateY(-2px);
  }
}
